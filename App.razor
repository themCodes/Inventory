@* Use the classes in Services. *@
@using Inventory.Services;

@* Inject the IdentityInformation class and make it available as _identity which will be available from anywhere in the application. *@
@inject IdentityInformation _identity;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    // This is passed on from _Host.cshtml and contains the username and isauthenticated bool.
    [Parameter]
    public InitialApplicationState InitialState { get; set; }

    protected override void OnInitialized()
    {

        _identity.UserName = InitialState.UserName;
        _identity.IsAuthenticated = InitialState.IsAuthenticated;
    }
}